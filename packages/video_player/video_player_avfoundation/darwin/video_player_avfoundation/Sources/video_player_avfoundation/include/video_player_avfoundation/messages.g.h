// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Autogenerated from Pigeon (v18.0.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

/// The codec used by FVPAVFoundationVideoPlayerApi.
NSObject<FlutterMessageCodec> *FVPAVFoundationVideoPlayerApiGetCodec(void);

@protocol FVPAVFoundationVideoPlayerApi
/// Returns the raw pointer to the view provider.
///
/// The implementation is responsible for ensuring that this pointer remains
/// valid for the lifetime of the plugin.
///
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)viewProviderPointer:(FlutterError *_Nullable *_Nonnull)error;
/// Configures the given player for display, and returns its texture ID.
///
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)configurePlayerPointer:(NSInteger)playerPointer
                                        error:(FlutterError *_Nullable *_Nonnull)error;
/// Wraps registrar-based asset lookup, as that's not currently accessible via
/// FFI.
- (nullable NSString *)pathForAssetWithName:(NSString *)assetName
                                    package:(nullable NSString *)packageName
                                      error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void SetUpFVPAVFoundationVideoPlayerApi(
    id<FlutterBinaryMessenger> binaryMessenger,
    NSObject<FVPAVFoundationVideoPlayerApi> *_Nullable api);

extern void SetUpFVPAVFoundationVideoPlayerApiWithSuffix(
    id<FlutterBinaryMessenger> binaryMessenger,
    NSObject<FVPAVFoundationVideoPlayerApi> *_Nullable api, NSString *messageChannelSuffix);

NS_ASSUME_NONNULL_END
